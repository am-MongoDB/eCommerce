{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js!/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js!/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/components/AnonymousAuth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/components/AnonymousAuth.vue","mtime":1566402515009},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport { AnonymousCredential, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nexport default {\n  name: \"AnonymousAuth\",\n  props: [\"stitchClient\"],\n  data: function data() {\n    return {\n      error: ''\n    };\n  },\n  methods: {\n    anonymousLogin: function anonymousLogin() {\n      var _this = this;\n\n      if (!this.stitchClient.auth.isLoggedIn) {\n        this.stitchClient.auth.loginWithCredential(new AnonymousCredential()).then(function () {}).catch(function (err) {\n          _this.error = \"Anonymous Stitch authentication failed: \".concat(err.message);\n        });\n      }\n    },\n    connectDatabase: function connectDatabase() {\n      try {\n        var database = this.stitchClient.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\").db(\"ecommerce\");\n        this.$emit('setDatabase', database);\n      } catch (err) {\n        this.error = \"Failed to connect to the database: \".concat(err.message);\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\n        console.error(this.error);\n      }\n    }\n  },\n  created: function created() {\n    this.anonymousLogin();\n\n    if (this.error) {\n      /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n      console.error(this.error);\n    } else {\n      this.connectDatabase();\n    }\n  }\n};",{"version":3,"sources":["AnonymousAuth.vue"],"names":[],"mappings":";;;;;;AAOA,SACA,mBADA,EAEA,iBAFA,QAGA,4BAHA;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA,CAAA,cAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAIA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AACA,UAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AACA,aAAA,YAAA,CAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,mBAAA,EAAA,EACA,IADA,CACA,YAAA,CACA,CAFA,EAGA,KAHA,CAGA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,qDAAA,GAAA,CAAA,OAAA;AACA,SALA;AAMA;AACA,KAVA;AAWA,IAAA,eAXA,6BAWA;AACA,UAAA;AACA,YAAA,QAAA,GAAA,KAAA,YAAA,CAAA,gBAAA,CAAA,iBAAA,CAAA,OAAA,EAAA,eAAA,EAAA,EAAA,CAAA,WAAA,CAAA;AACA,aAAA,KAAA,CAAA,aAAA,EAAA,QAAA;AACA,OAHA,CAIA,OAAA,GAAA,EAAA;AACA,aAAA,KAAA,gDAAA,GAAA,CAAA,OAAA;AACA;;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA,KAAA;AACA;AACA;AArBA,GATA;AAgCA,EAAA,OAhCA,qBAgCA;AACA,SAAA,cAAA;;AACA,QAAA,KAAA,KAAA,EAAA;AACA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,KAAA,KAAA;AACA,KAHA,MAGA;AACA,WAAA,eAAA;AACA;AACA;AAxCA,CAAA","sourcesContent":["<template>\n    <div>\n\n    </div>\n</template>\n\n<script>\nimport {\n    AnonymousCredential,\n    RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"AnonymousAuth\",\n    props: [\"stitchClient\"], \n    data() {\n        return {\n            error:'',\n\n        }\n    },\n    methods: {\n        anonymousLogin() {\n        if (!this.stitchClient.auth.isLoggedIn) {\n            this.stitchClient.auth.loginWithCredential(new AnonymousCredential())\n            .then(() => {\n            })\n            .catch(err => {\n                this.error = `Anonymous Stitch authentication failed: ${err.message}`;\n            });\n        }\n    },\n    connectDatabase() {\n        try {\n            const database = this.stitchClient.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\").db(\"ecommerce\");\n            this.$emit('setDatabase', database);\n        }\n        catch (err) {\n            this.error = `Failed to connect to the database: ${err.message}`;\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n            console.error(this.error);\n        }\n    }\n  },\n  created() {\n    this.anonymousLogin();\n    if (this.error) {\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    } else {\n        this.connectDatabase();\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}