{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js!/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js!/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/views/Register.vue","mtime":1566466211021},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MyHeader from \"../components/Header.vue\";\nimport { UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\nexport default {\n  name: 'register',\n  props: [\"stitchClient\", \"userLoggedIn\", \"userFirstName\"],\n  components: {\n    MyHeader: MyHeader\n  },\n  data: function data() {\n    return {\n      error: '',\n      success: '',\n      email: '',\n      password: '',\n      password2: ''\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n\n      /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n      console.log('Registering user');\n      this.error = '';\n\n      if (this.password != this.password2) {\n        this.error = 'Error, passwords must match.';\n      } else {\n        var emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n        emailPassClient.registerWithEmail(this.email, \"this.password\").then(function () {\n          _this.success = \"Registration request being processed – check your inbox\";\n          /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n\n          console.log(\"Successfully sent account confirmation email!\");\n        }, function (err) {\n          _this.error = \"Could not register user: \".concat(err.message);\n          /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n\n          console.error(_this.error);\n        });\n      }\n    },\n    setUserLoggedIn: function setUserLoggedIn(user) {\n      this.$emit(\"user-logged-in\", user);\n    }\n  },\n  mounted: function mounted() {}\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,OAAA,QAAA;AACA,SAAA,8BAAA,QAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA,CACA,cADA,EAEA,cAFA,EAGA,eAHA,CAFA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAPA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,WAAA,KAAA,GAAA,EAAA;;AACA,UAAA,KAAA,QAAA,IAAA,KAAA,SAAA,EACA;AACA,aAAA,KAAA,GAAA,8BAAA;AACA,OAHA,MAGA;AACA,YAAA,eAAA,GAAA,KAAA,YAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,8BAAA,CAAA,OAAA,CAAA;AACA,QAAA,eAAA,CAAA,iBAAA,CAAA,KAAA,KAAA,EAAA,eAAA,EACA,IADA,CACA,YAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,yDAAA;AACA;;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,+CAAA;AACA,SALA,EAMA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,sCAAA,GAAA,CAAA,OAAA;AACA;;AACA,UAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,SAVA;AAWA;AACA,KAtBA;AAuBA,IAAA,eAvBA,2BAuBA,IAvBA,EAuBA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,IAAA;AACA;AAzBA,GAnBA;AA8CA,EAAA,OA9CA,qBA8CA,CACA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"register\">\n    <MyHeader\n        v-bind:stitchClient=\"stitchClient\"\n        v-bind:userLoggedIn=\"userLoggedIn\" v-on:user-logged-in=\"setUserLoggedIn\"\n        v-bind:userFirstName=\"userFirstName\"></MyHeader>\n    <div class=\"section\">\n        <h1 class=\"title is-2\">Register new user</h1>\n        <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n                <label class=\"label\">ID</label>\n            </div>\n            <div class=\"field-body\">\n                <div class=\"field\">\n                    <p class=\"control is-expanded has-icons-left\">\n                        <input v-model=\"email\" class=\"input\" type=\"email\" placeholder=\"Email\">\n                        <span class=\"icon is-small is-left\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n                <label class=\"label\">Password</label>\n            </div>\n            <div class=\"field-body\">\n                <div class=\"field is-expanded\">\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"password\" class=\"input\" type=\"password\" placeholder=\"Password\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-key\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"password2\" class=\"input\" type=\"password\" placeholder=\"Repeat password\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-key\"></i>\n                            </span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"field is-grouped is-grouped-centered\">\n            <p class=\"control\">\n                <button v-on:click=\"register\" class=\"button is-success\">\n                    Register\n                </button>\n            </p>\n        </div>\n        <div v-if=\"error\" class=\"notification is-danger\">\n            <strong>{{ error }}</strong>\n        </div>\n        <div v-if=\"success\" class=\"notification is-success\">\n            {{ success }}\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n\nimport MyHeader from '../components/Header.vue'\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: 'register',\n    props: [\n        \"stitchClient\",\n        \"userLoggedIn\",\n        \"userFirstName\"\n    ],\n    components: {\n        MyHeader\n    },\n    data() {\n        return {\n            error: '',\n            success: '',\n            email: '',\n            password: '',\n            password2: ''\n        }\n    },\n    methods: {\n        register() {\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n            console.log('Registering user');\n            this.error = '';\n            if (this.password != this.password2)\n            {\n                this.error = 'Error, passwords must match.';\n            } else {\n                const emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n                emailPassClient.registerWithEmail(this.email, \"this.password\")\n                .then(() => {\n                    this.success = \"Registration request being processed – check your inbox\";\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log(\"Successfully sent account confirmation email!\");\n                },\n                (err) => {\n                    this.error = `Could not register user: ${err.message}`;\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.error(this.error);\n                });\n            }\n        },\n        setUserLoggedIn(user) {\n            this.$emit(\"user-logged-in\", user)\n        }\n    },\n    mounted() {\n    }\n}\n</script>\n"],"sourceRoot":"src/views"}]}