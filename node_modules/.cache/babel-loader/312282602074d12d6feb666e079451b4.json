{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js!/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/components/ConfirmStitchEmail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/components/ConfirmStitchEmail.vue","mtime":1566402356928},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\nexport default {\n  name: \"ConfirmStitchEmail\",\n  props: [\"stitchClient\"],\n  data: function data() {\n    return {\n      error: '',\n      success: '',\n      cta: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var token,\n        tokenId = '';\n\n    try {\n      // Parse the URL query parameters\n      var url = window.location.search;\n      var params = new URLSearchParams(url);\n      token = params.get('token');\n      tokenId = params.get('tokenId');\n    } catch (err) {\n      this.error = \"Failed to parse URL parameters: \".concat(err.message);\n      /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\n      console.error(this.error);\n    }\n\n    try {\n      // Confirm the user's email/password account (at this point, the user hasn't logged \n      // in and doesn't appear in the Stitch UI)\n      var emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n      emailPassClient.confirmUser(token, tokenId).then(function () {\n        _this.success = \"Password confirmed.\";\n        _this.cta = 'Return to <router-link to=\"/\">Home page</router-link> and login to continue.';\n      }, function (err) {\n        _this.error = \"Failed to confirm email address: \".concat(err.message);\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\n        console.error(_this.error);\n      });\n    } catch (err) {\n      this.error = \"Failed to confirm email address: \".concat(err.message);\n      /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\n      console.error(this.error);\n    }\n  }\n};",{"version":3,"sources":["ConfirmStitchEmail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,SACA,8BADA,QAEA,4BAFA;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,KAAA,EAAA,CACA,cADA,CAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,GAAA,EAAA;AAHA,KAAA;AAKA,GAXA;AAYA,EAAA,OAZA,qBAYA;AAAA;;AACA,QAAA,KAAA;AAAA,QAAA,OAAA,GAAA,EAAA;;AACA,QAAA;AACA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,QAAA,CAAA,MAAA;AACA,UAAA,MAAA,GAAA,IAAA,eAAA,CAAA,GAAA,CAAA;AACA,MAAA,KAAA,GAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AACA,MAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,SAAA,CAAA;AACA,KANA,CAOA,OAAA,GAAA,EAAA;AACA,WAAA,KAAA,6CAAA,GAAA,CAAA,OAAA;AACA;;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,KAAA,KAAA;AACA;;AAEA,QAAA;AACA;AACA;AACA,UAAA,eAAA,GAAA,KAAA,YAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,8BAAA,CAAA,OAAA,CAAA;AACA,MAAA,eAAA,CAAA,WAAA,CAAA,KAAA,EAAA,OAAA,EACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,qBAAA;AACA,QAAA,KAAA,CAAA,GAAA,GAAA,8EAAA;AACA,OAJA,EAIA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,8CAAA,GAAA,CAAA,OAAA;AACA;;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,OARA;AASA,KAbA,CAcA,OAAA,GAAA,EAAA;AACA,WAAA,KAAA,8CAAA,GAAA,CAAA,OAAA;AACA;;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,KAAA,KAAA;AACA;AACA;AA9CA,CAAA","sourcesContent":["<template>\n    <div class=\"container\">\n        <h1 class=\"title is-1\">Confirming email address</h1>\n        <div v-if=\"error\" class=\"notification is-danger\">\n            <strong>{{ error }}</strong>\n        </div>\n        <div v-if=\"success\" class=\"notification is-success\">\n            {{ success }}\n        </div>\n        <div v-if=\"cta\" class=\"notification is-primary\">\n            <div class=\"content\">\n                {{ primary }}                \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {\n    UserPasswordAuthProviderClient\n} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"ConfirmStitchEmail\",\n    props: [\n        \"stitchClient\"\n    ], \n    data() {\n        return {\n            error:'',\n            success:'',\n            cta: ''\n        }\n    },\n  created() {\n    let token, tokenId = '';\n    try {\n        // Parse the URL query parameters\n        const url = window.location.search;\n        const params = new URLSearchParams(url);\n        token = params.get('token');\n        tokenId = params.get('tokenId');\n    }\n    catch (err) {\n        this.error = `Failed to parse URL parameters: ${err.message}`;\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    }\n\n    try {\n        // Confirm the user's email/password account (at this point, the user hasn't logged \n        // in and doesn't appear in the Stitch UI)\n        const emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n        emailPassClient.confirmUser(token, tokenId)\n        .then ( () => {\n            this.success = \"Password confirmed.\";\n            this.cta = 'Return to <router-link to=\"/\">Home page</router-link> and login to continue.';\n        }, err => {\n            this.error = `Failed to confirm email address: ${err.message}`;\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n            console.error(this.error);\n        })\n        }\n    catch (err) {\n        this.error = `Failed to confirm email address: ${err.message}`;\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}