{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js!/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js!/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/views/UserProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/views/UserProfile.vue","mtime":1566475185210},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MyHeader from \"../components/Header.vue\";\nexport default {\n  name: 'profile',\n  props: [\"stitchClient\", \"database\", \"userLoggedIn\", \"userFirstName\", \"customer\"],\n  components: {\n    MyHeader: MyHeader\n  },\n  data: function data() {\n    return {\n      error: '',\n      success: '',\n      progress: '',\n      localCustomer: {\n        contact: {\n          deliveryAddress: {},\n          phone: {}\n        },\n        name: {}\n      },\n      originalEmail: ''\n    };\n  },\n  methods: {\n    setLocalCustomer: function setLocalCustomer(customer) {\n      this.customer = customer;\n    },\n    propBackCustomer: function propBackCustomer() {\n      this.$emit(\"setCustomer\", this.localCustomer);\n    },\n    fetchCustomer: function fetchCustomer() {\n      var _this = this;\n\n      this.progress = 'Looking for existing user profile.';\n      this.database.collection(\"customers\").findOne({}).then(function (customerDoc) {\n        if (customerDoc) {\n          _this.localCustomer = customerDoc;\n          _this.progress = '';\n          /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n\n          console.log('Read a customer document from the database.');\n        } else {\n          // No record found for this customer â€“ doesn't mean that it's a problem\n          _this.progress = '';\n          /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n\n          console.log('No matching customer document found in the database.');\n        }\n      }, function (err) {\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n        console.error(\"Error: attempt to read customer document failed: \".concat(err.message));\n      });\n    },\n    saveProfile: function saveProfile() {\n      var _this2 = this;\n\n      this.progress = 'Writing profile to database.';\n      this.error = '';\n      this.success = '';\n      this.database.collection(\"customers\").updateOne({\n        \"contact.email\": this.localCustomer.contact.email\n      }, this.localCustomer, {\n        upsert: true\n      }).then(function () {\n        _this2.progress = '';\n\n        _this2.propBackCustomer();\n\n        if (_this2.localCustomer.name.first) {\n          _this2.$emit(\"setUserFirstName\", _this2.localCustomer.name.first);\n        }\n\n        _this2.success = \"User profile updated.\"; //TODO propagate the user name back up to the header and app\n      }, function (err) {\n        _this2.progress = '';\n        _this2.error = \"Error: Writing profile to the database - \".concat(err.message);\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n\n        console.error(_this2.error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (this.userLoggedIn) {\n      this.localCustomer = this.$props.customer;\n      this.fetchCustomer();\n      this.originalEmail = this.localCustomer.contact.email;\n    } else {\n      this.error = \"Cannot access customer profile until user is logged in\";\n      /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n\n      console.error(this.error);\n    }\n  }\n};",{"version":3,"sources":["UserProfile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"profile\">\n    <MyHeader \n        v-bind:stitchClient=\"stitchClient\"\n        v-bind:userLoggedIn=\"userLoggedIn\"\n        v-bind:userFirstName=\"userFirstName\">\n    </MyHeader>\n    <div class=\"section\">\n        <div class=\"container\">\n            <h1 class=\"title is-2\">User Profile</h1>\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Name</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"localCustomer.name.first\" class=\"input\" type=\"name\" placeholder=\"First\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-user\"></i>\n                            </span>\n                        </p>\n                    </div>\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"localCustomer.name.last\" class=\"input\" type=\"name\" placeholder=\"Last\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-user\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Contact</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field is-expanded\">\n                        <div class=\"field\">\n                            <p class=\"control is-expanded has-icons-left\">\n                                <input v-model=\"localCustomer.contact.phone.mobile\" class=\"input\" type=\"tel\" placeholder=\"Moile phone number\">\n                                <span class=\"icon is-small is-left\">\n                                    <i class=\"fas fa-phone\"></i>\n                                </span>\n                            </p>\n                        </div>\n                        <p class=\"help\">Include +CC</p>\n                    </div>\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"localCustomer.contact.email\" class=\"input\" type=\"email\" placeholder=\"Email\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-envelope\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field is-grouped is-grouped-centered\">\n                <p class=\"control\">\n                    <button v-on:click=\"saveProfile\" class=\"button is-success\">\n                        Save Profile\n                    </button>\n                </p>\n            </div>\n            <div v-if=\"progress\" class=\"notification is-info\">\n                {{ progress }}\n            </div>\n            <div v-if=\"error\" class=\"notification is-danger\">\n                <strong>{{ error }}</strong>\n            </div>\n            <div v-if=\"success\" class=\"notification is-success\">\n                {{ success }}\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n\nimport MyHeader from '../components/Header.vue'\n\nexport default {\n    name: 'profile',\n    props: [\n      \"stitchClient\",\n      \"database\",\n      \"userLoggedIn\",\n      \"userFirstName\",\n      \"customer\"\n    ],\n    components: {\n        MyHeader\n    },\n    data() {\n        return {\n            error: '',\n            success: '',\n            progress: '',\n            localCustomer: {\n                contact: {\n                    deliveryAddress: {},\n                    phone: {}\n                },\n                name: {}\n            },\n            originalEmail: ''\n        }\n    },\n    methods: {\n        setLocalCustomer (customer) {\n            this.customer = customer;\n        },\n        propBackCustomer () {\n            this.$emit(\"setCustomer\", this.localCustomer);\n        },\n        fetchCustomer () {\n            this.progress = 'Looking for existing user profile.';\n            this.database.collection(\"customers\")\n            .findOne({})\n            .then (customerDoc => {\n                    if (customerDoc) {\n                    this.localCustomer = customerDoc\n                    this.progress = ''\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log('Read a customer document from the database.');\n                } else {\n                    // No record found for this customer â€“ doesn't mean that it's a problem\n                    this.progress = ''\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log('No matching customer document found in the database.');\n                }\n            }, (err) => {\n                \n                /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                console.error(`Error: attempt to read customer document failed: ${err.message}`);\n            })\n        },\n        saveProfile ()\n        {\n            this.progress = 'Writing profile to database.';\n            this.error = '';\n            this.success = '';\n            this.database.collection(\"customers\").updateOne(\n                {\"contact.email\": this.localCustomer.contact.email},\n                this.localCustomer,\n                {upsert: true}\n            ).then (() => {\n                this.progress = '';\n                this.propBackCustomer();\n                if (this.localCustomer.name.first) {\n                    this.$emit(\"setUserFirstName\", this.localCustomer.name.first)\n                }\n                this.success = \"User profile updated.\";\n                //TODO propagate the user name back up to the header and app\n            }, (err) => {\n                this.progress = '';\n                this.error = `Error: Writing profile to the database - ${err.message}`;\n                /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                console.error(this.error);\n            })\n        }\n    },\n    mounted() {\n        if (this.userLoggedIn) {\n            this.localCustomer = this.$props.customer;\n            this.fetchCustomer();\n            this.originalEmail = this.localCustomer.contact.email;\n        } else {\n            this.error = \"Cannot access customer profile until user is logged in\";\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n            console.error(this.error);\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/views"}]}