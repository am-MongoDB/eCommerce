{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/components/AnonymousAuth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/components/AnonymousAuth.vue","mtime":1565882040715},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport {\n    AnonymousCredential,\n    RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"AnonymousAuth\",\n    props: [\"stitchClient\"], \n    data() {\n        return {\n            error:'',\n            db:''\n        }\n    },\n    methods: {\n        anonymousLogin() {\n        if (!this.stitchClient.auth.isLoggedIn) {\n            this.stitchClient.auth.loginWithCredential(new AnonymousCredential())\n            .then(() => {\n            })\n            .catch(err => {\n                this.error = `Anonymous Stitch authentication failed: ${err.message}`;\n            });\n        }\n    },\n    connectDatabase() {\n        try {\n            this.db = this.stitchClient.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\").db(\"ecommerce\");\n            this.$emit('db', this.db);\n        }\n        catch (err) {\n            this.error = `Failed to connect to the database: ${err.message}`;\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n            console.error(this.error);\n        }\n    }\n  },\n  created() {\n    this.anonymousLogin();\n    if (this.error) {\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    } else {\n        this.connectDatabase();\n    }\n  }\n}\n",{"version":3,"sources":["AnonymousAuth.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AnonymousAuth.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n\n    </div>\n</template>\n\n<script>\nimport {\n    AnonymousCredential,\n    RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"AnonymousAuth\",\n    props: [\"stitchClient\"], \n    data() {\n        return {\n            error:'',\n            db:''\n        }\n    },\n    methods: {\n        anonymousLogin() {\n        if (!this.stitchClient.auth.isLoggedIn) {\n            this.stitchClient.auth.loginWithCredential(new AnonymousCredential())\n            .then(() => {\n            })\n            .catch(err => {\n                this.error = `Anonymous Stitch authentication failed: ${err.message}`;\n            });\n        }\n    },\n    connectDatabase() {\n        try {\n            this.db = this.stitchClient.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\").db(\"ecommerce\");\n            this.$emit('db', this.db);\n        }\n        catch (err) {\n            this.error = `Failed to connect to the database: ${err.message}`;\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n            console.error(this.error);\n        }\n    }\n  },\n  created() {\n    this.anonymousLogin();\n    if (this.error) {\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    } else {\n        this.connectDatabase();\n    }\n  }\n}\n</script>\n"]}]}