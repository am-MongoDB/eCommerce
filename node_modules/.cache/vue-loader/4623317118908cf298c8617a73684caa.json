{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/views/Register.vue","mtime":1566466211021},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport MyHeader from '../components/Header.vue'\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: 'register',\n    props: [\n        \"stitchClient\",\n        \"userLoggedIn\",\n        \"userFirstName\"\n    ],\n    components: {\n        MyHeader\n    },\n    data() {\n        return {\n            error: '',\n            success: '',\n            email: '',\n            password: '',\n            password2: ''\n        }\n    },\n    methods: {\n        register() {\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n            console.log('Registering user');\n            this.error = '';\n            if (this.password != this.password2)\n            {\n                this.error = 'Error, passwords must match.';\n            } else {\n                const emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n                emailPassClient.registerWithEmail(this.email, \"this.password\")\n                .then(() => {\n                    this.success = \"Registration request being processed – check your inbox\";\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log(\"Successfully sent account confirmation email!\");\n                },\n                (err) => {\n                    this.error = `Could not register user: ${err.message}`;\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.error(this.error);\n                });\n            }\n        },\n        setUserLoggedIn(user) {\n            this.$emit(\"user-logged-in\", user)\n        }\n    },\n    mounted() {\n    }\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"register\">\n    <MyHeader\n        v-bind:stitchClient=\"stitchClient\"\n        v-bind:userLoggedIn=\"userLoggedIn\" v-on:user-logged-in=\"setUserLoggedIn\"\n        v-bind:userFirstName=\"userFirstName\"></MyHeader>\n    <div class=\"section\">\n        <h1 class=\"title is-2\">Register new user</h1>\n        <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n                <label class=\"label\">ID</label>\n            </div>\n            <div class=\"field-body\">\n                <div class=\"field\">\n                    <p class=\"control is-expanded has-icons-left\">\n                        <input v-model=\"email\" class=\"input\" type=\"email\" placeholder=\"Email\">\n                        <span class=\"icon is-small is-left\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n                <label class=\"label\">Password</label>\n            </div>\n            <div class=\"field-body\">\n                <div class=\"field is-expanded\">\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"password\" class=\"input\" type=\"password\" placeholder=\"Password\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-key\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"password2\" class=\"input\" type=\"password\" placeholder=\"Repeat password\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-key\"></i>\n                            </span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"field is-grouped is-grouped-centered\">\n            <p class=\"control\">\n                <button v-on:click=\"register\" class=\"button is-success\">\n                    Register\n                </button>\n            </p>\n        </div>\n        <div v-if=\"error\" class=\"notification is-danger\">\n            <strong>{{ error }}</strong>\n        </div>\n        <div v-if=\"success\" class=\"notification is-success\">\n            {{ success }}\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n\nimport MyHeader from '../components/Header.vue'\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: 'register',\n    props: [\n        \"stitchClient\",\n        \"userLoggedIn\",\n        \"userFirstName\"\n    ],\n    components: {\n        MyHeader\n    },\n    data() {\n        return {\n            error: '',\n            success: '',\n            email: '',\n            password: '',\n            password2: ''\n        }\n    },\n    methods: {\n        register() {\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n            console.log('Registering user');\n            this.error = '';\n            if (this.password != this.password2)\n            {\n                this.error = 'Error, passwords must match.';\n            } else {\n                const emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n                emailPassClient.registerWithEmail(this.email, \"this.password\")\n                .then(() => {\n                    this.success = \"Registration request being processed – check your inbox\";\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log(\"Successfully sent account confirmation email!\");\n                },\n                (err) => {\n                    this.error = `Could not register user: ${err.message}`;\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.error(this.error);\n                });\n            }\n        },\n        setUserLoggedIn(user) {\n            this.$emit(\"user-logged-in\", user)\n        }\n    },\n    mounted() {\n    }\n}\n</script>\n"]}]}