{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/views/UserProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/views/UserProfile.vue","mtime":1566471598849},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport MyHeader from '../components/Header.vue'\n\nexport default {\n    name: 'profile',\n    props: [\n      \"stitchClient\",\n      \"database\",\n      \"userLoggedIn\",\n      \"userFirstName\",\n      \"customer\"\n    ],\n    components: {\n        MyHeader\n    },\n    data() {\n        return {\n            error: '',\n            success: '',\n            progress: '',\n            localCustomer: {\n                contact: {\n                    deliveryAddress: {},\n                    phone: {}\n                },\n                name: {}\n            },\n            originalEmail: ''\n        }\n    },\n    methods: {\n        setLocalCustomer (customer) {\n            this.customer = customer;\n        },\n        propBackCustomer () {\n            this.$emit(\"setCustomer\", this.localCustomer);\n        },\n        fetchCustomer () {\n            this.progress = 'Looking for existing user profile.';\n            this.database.collection(\"customers\")\n            .findOne({})\n            .then (customerDoc => {\n                    if (customerDoc) {\n                    this.localCustomer = customerDoc\n                    this.progress = ''\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log('Read a customer document from the database.');\n                } else {\n                    // No record found for this customer â€“ doesn't mean that it's a problem\n                    this.progress = ''\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log('No matching customer document found in the database.');\n                }\n            }, (err) => {\n                \n                /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                console.error(`Error: attempt to read customer document failed: ${err.message}`);\n            })\n        },\n        saveProfile ()\n        {\n            this.progress = 'Writing profile to database.';\n            this.error = '';\n            this.success = '';\n            this.database.collection(\"customers\").updateOne(\n                {\"contact.email\": this.localCustomer.contact.email},\n                this.localCustomer,\n                {upsert: true}\n            ).then (() => {\n                this.progress = '';\n                this.propBackCustomer();\n                this.success = \"User profile updated.\";\n            }, (err) => {\n                this.progress = '';\n                this.error = `Error: Writing profile to the database - ${err.message}`;\n                /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                console.error(this.error);\n            })\n        }\n    },\n    mounted() {\n        if (this.userLoggedIn) {\n            this.localCustomer = this.$props.customer;\n            this.fetchCustomer();\n            this.originalEmail = this.localCustomer.contact.email;\n        } else {\n            this.error = \"Cannot access customer profile until user is logged in\";\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n            console.error(this.error);\n        }\n    }\n}\n",{"version":3,"sources":["UserProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserProfile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"profile\">\n    <MyHeader \n        v-bind:stitchClient=\"stitchClient\"\n        v-bind:userLoggedIn=\"userLoggedIn\"\n        v-bind:userFirstName=\"userFirstName\">\n    </MyHeader>\n    <div class=\"section\">\n        <div class=\"container\">\n            <h1 class=\"title is-2\">User Profile</h1>\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Name</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"localCustomer.name.first\" class=\"input\" type=\"name\" placeholder=\"First\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-user\"></i>\n                            </span>\n                        </p>\n                    </div>\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"localCustomer.name.last\" class=\"input\" type=\"name\" placeholder=\"Last\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-user\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Contact</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field is-expanded\">\n                        <div class=\"field\">\n                            <p class=\"control is-expanded has-icons-left\">\n                                <input v-model=\"localCustomer.contact.phone.mobile\" class=\"input\" type=\"tel\" placeholder=\"Moile phone number\">\n                                <span class=\"icon is-small is-left\">\n                                    <i class=\"fas fa-phone\"></i>\n                                </span>\n                            </p>\n                        </div>\n                        <p class=\"help\">Include +CC</p>\n                    </div>\n                    <div class=\"field\">\n                        <p class=\"control is-expanded has-icons-left\">\n                            <input v-model=\"localCustomer.contact.email\" class=\"input\" type=\"email\" placeholder=\"Email\">\n                            <span class=\"icon is-small is-left\">\n                                <i class=\"fas fa-envelope\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field is-grouped is-grouped-centered\">\n                <p class=\"control\">\n                    <button v-on:click=\"saveProfile\" class=\"button is-success\">\n                        Save Profile\n                    </button>\n                </p>\n            </div>\n            <div v-if=\"progress\" class=\"notification is-info\">\n                {{ progress }}\n            </div>\n            <div v-if=\"error\" class=\"notification is-danger\">\n                <strong>{{ error }}</strong>\n            </div>\n            <div v-if=\"success\" class=\"notification is-success\">\n                {{ success }}\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n\nimport MyHeader from '../components/Header.vue'\n\nexport default {\n    name: 'profile',\n    props: [\n      \"stitchClient\",\n      \"database\",\n      \"userLoggedIn\",\n      \"userFirstName\",\n      \"customer\"\n    ],\n    components: {\n        MyHeader\n    },\n    data() {\n        return {\n            error: '',\n            success: '',\n            progress: '',\n            localCustomer: {\n                contact: {\n                    deliveryAddress: {},\n                    phone: {}\n                },\n                name: {}\n            },\n            originalEmail: ''\n        }\n    },\n    methods: {\n        setLocalCustomer (customer) {\n            this.customer = customer;\n        },\n        propBackCustomer () {\n            this.$emit(\"setCustomer\", this.localCustomer);\n        },\n        fetchCustomer () {\n            this.progress = 'Looking for existing user profile.';\n            this.database.collection(\"customers\")\n            .findOne({})\n            .then (customerDoc => {\n                    if (customerDoc) {\n                    this.localCustomer = customerDoc\n                    this.progress = ''\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log('Read a customer document from the database.');\n                } else {\n                    // No record found for this customer â€“ doesn't mean that it's a problem\n                    this.progress = ''\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                    console.log('No matching customer document found in the database.');\n                }\n            }, (err) => {\n                \n                /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                console.error(`Error: attempt to read customer document failed: ${err.message}`);\n            })\n        },\n        saveProfile ()\n        {\n            this.progress = 'Writing profile to database.';\n            this.error = '';\n            this.success = '';\n            this.database.collection(\"customers\").updateOne(\n                {\"contact.email\": this.localCustomer.contact.email},\n                this.localCustomer,\n                {upsert: true}\n            ).then (() => {\n                this.progress = '';\n                this.propBackCustomer();\n                this.success = \"User profile updated.\";\n            }, (err) => {\n                this.progress = '';\n                this.error = `Error: Writing profile to the database - ${err.message}`;\n                /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n                console.error(this.error);\n            })\n        }\n    },\n    mounted() {\n        if (this.userLoggedIn) {\n            this.localCustomer = this.$props.customer;\n            this.fetchCustomer();\n            this.originalEmail = this.localCustomer.contact.email;\n        } else {\n            this.error = \"Cannot access customer profile until user is logged in\";\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */   \n            console.error(this.error);\n        }\n    }\n}\n</script>\n"]}]}