{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/components/ConfirmStitchEmail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/components/ConfirmStitchEmail.vue","mtime":1566290790768},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    UserPasswordAuthProviderClient\n} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"ConfirmStitchEmail\",\n    props: [\"stitchClient\"], \n    data() {\n        return {\n            error:'',\n            success:'',\n            cta: ''\n        }\n    },\n  created() {\n    let token, tokenId = '';\n    try {\n        // Parse the URL query parameters\n        const url = window.location.search;\n        const params = new URLSearchParams(url);\n        token = params.get('token');\n        tokenId = params.get('tokenId');\n    }\n    catch (err) {\n        this.error = `Failed to parse URL parameters: ${err.message}`;\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    }\n\n    try {\n        // Confirm the user's email/password account (at this point, the user hasn't logged \n        // in and doesn't appear in the Stitch UI)\n        const emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n        emailPassClient.confirmUser(token, tokenId)\n        .then ( () => {\n            this.success = \"Password confirmed.\";\n            this.cta = 'Return to <router-link to=\"/\">Home page</router-link> and login to continue.';\n        }, err => {\n            this.error = `Failed to confirm email address: ${err.message}`;\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n            console.error(this.error);\n        })\n        }\n    catch (err) {\n        this.error = `Failed to confirm email address: ${err.message}`;\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    }\n  }\n}\n",{"version":3,"sources":["ConfirmStitchEmail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConfirmStitchEmail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\">\n        <h1 class=\"title is-1\">Confirming email address</h1>\n        <div v-if=\"error\" class=\"notification is-danger\">\n            <strong>{{ error }}</strong>\n        </div>\n        <div v-if=\"success\" class=\"notification is-success\">\n            {{ success }}\n        </div>\n        <div v-if=\"cta\" class=\"notification is-primary\">\n            <div class=\"content\">\n                {{ primary }}                \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {\n    UserPasswordAuthProviderClient\n} from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"ConfirmStitchEmail\",\n    props: [\"stitchClient\"], \n    data() {\n        return {\n            error:'',\n            success:'',\n            cta: ''\n        }\n    },\n  created() {\n    let token, tokenId = '';\n    try {\n        // Parse the URL query parameters\n        const url = window.location.search;\n        const params = new URLSearchParams(url);\n        token = params.get('token');\n        tokenId = params.get('tokenId');\n    }\n    catch (err) {\n        this.error = `Failed to parse URL parameters: ${err.message}`;\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    }\n\n    try {\n        // Confirm the user's email/password account (at this point, the user hasn't logged \n        // in and doesn't appear in the Stitch UI)\n        const emailPassClient = this.stitchClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n        emailPassClient.confirmUser(token, tokenId)\n        .then ( () => {\n            this.success = \"Password confirmed.\";\n            this.cta = 'Return to <router-link to=\"/\">Home page</router-link> and login to continue.';\n        }, err => {\n            this.error = `Failed to confirm email address: ${err.message}`;\n            /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n            console.error(this.error);\n        })\n        }\n    catch (err) {\n        this.error = `Failed to confirm email address: ${err.message}`;\n        /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n        console.error(this.error);\n    }\n  }\n}\n</script>\n"]}]}