{"remainingRequest":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/src/buefy_test/src/components/UserLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/src/buefy_test/src/components/UserLogin.vue","mtime":1566402313863},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/src/buefy_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserPasswordCredential } from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"UserLogin\",\n    props: [\n        \"stitchClient\"\n    ], \n    data() {\n        return {\n            error: '',\n            success: '',\n            email: '',\n            password: '',\n            user: null\n        }\n    },\n    methods: {\n        Login() {\n            const credential = new UserPasswordCredential(this.email, this.password);\n            this.stitchClient.auth.loginWithCredential(credential)\n            .then (authedUser => {\n                    this.success = `Successfully logged in with id: ${authedUser.id}`;\n                    this.error = '';\n                    this.user = authedUser;\n                    this.$emit('user-logged-in', this.user);\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n                    console.log(this.success);\n                },\n                (err) => {\n                    this.error = `Failed to log in user: ${err.message}`;\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n                    console.error(this.error);\n                })\n        }\n    },\n    created() {\n    }\n}\n",{"version":3,"sources":["UserLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserLogin.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\" id=\"login\">\n        <div class=\"notification is-primary\">\n            <h1 class=\"title is-2\">Log into your existing account</h1>\n            <div class=\"field is-horizontal\">\n                <div class=\"field-body\">\n                    <div class=\"field is-expanded\">\n                        <div class=\"field\">\n                            <p class=\"control is-expanded has-icons-left\">\n                                <input v-model=\"email\" class=\"input\" type=\"email\" placeholder=\"Email\">\n                                <span class=\"icon is-small is-left\">\n                                    <i class=\"fas fa-envelope\"></i>\n                                </span>\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"field is-expanded\">\n                        <div class=\"field\">\n                            <p class=\"control is-expanded has-icons-left\">\n                                <input v-model=\"password\" class=\"input\" type=\"password\" placeholder=\"Password\">\n                                <span class=\"icon is-small is-left\">\n                                    <i class=\"fas fa-key\"></i>\n                                </span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field is-grouped is-grouped-centered\">\n                <p class=\"control\">\n                    <button v-on:click=\"Login\" class=\"button is-success is-medium is-focused\">\n                        <span class=\"icon is-small\">\n                            <i class=\"fas fa-check\"></i>\n                        </span>\n                        <span>Login</span>\n                    </button>\n                </p>\n                <p class=\"control\">\n                    <router-link to=\"/register\">\n                        <button class=\"button is-medium has-background-grey-lighter\">\n                            <span class=\"icon is-small\">\n                                <i class=\"fas fa-edit\"></i>\n                            </span>\n                            <span>Register a new account</span>\n                        </button>\n                    </router-link>\n                </p>\n            </div>\n        </div>      \n        <div v-if=\"error\" class=\"notification is-danger\">\n            <strong>{{ error }}</strong>\n        </div>\n        <div v-if=\"success\" class=\"notification is-success\">\n            {{ success }}\n        </div>\n    </div>\n</template>\n\n<script>\nimport { UserPasswordCredential } from \"mongodb-stitch-browser-sdk\"\n\nexport default {\n    name: \"UserLogin\",\n    props: [\n        \"stitchClient\"\n    ], \n    data() {\n        return {\n            error: '',\n            success: '',\n            email: '',\n            password: '',\n            user: null\n        }\n    },\n    methods: {\n        Login() {\n            const credential = new UserPasswordCredential(this.email, this.password);\n            this.stitchClient.auth.loginWithCredential(credential)\n            .then (authedUser => {\n                    this.success = `Successfully logged in with id: ${authedUser.id}`;\n                    this.error = '';\n                    this.user = authedUser;\n                    this.$emit('user-logged-in', this.user);\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n                    console.log(this.success);\n                },\n                (err) => {\n                    this.error = `Failed to log in user: ${err.message}`;\n                    /*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\n                    console.error(this.error);\n                })\n        }\n    },\n    created() {\n    }\n}\n</script>"]}]}